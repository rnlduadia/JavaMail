/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewMail.java
 *
 * Created on 2013. 6. 16, 오전 12:46:05
 */

package managemail;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.Date;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.activation.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author Administrator
 */
public class NewMail extends javax.swing.JPanel {

    private Account acc;
    private String state;
    private File attachFile;

    private Mail curMail = null;

    private ManageMailView view;
    /** Creates new form NewMail */
    public NewMail(Account _acc, String _state, Mail _selMail, ManageMailView _view) {
        initComponents();
        this.acc = _acc;
        this.state = _state;
        this.curMail = _selMail;
        this.view = _view;

        ImageIcon icon = new ImageIcon(getClass().getResource("/res/send.png"));
        this.jButton2.setIcon(icon);
        
        initSettings();
    }
    private void initSettings(){
      
        this.jTextField1.setText(acc.getId());
        this.jTextField3.setText(acc.getServer());

        if( curMail != null ){
            attachFile = new File(acc.getPath() + "/" + acc.getId() + "_Mail/inbox/attach/" + curMail.attach2);
            
            if( state.equals("REPLY") ){
                String to = curMail.from;
                //String tot = to.substring(0, to.indexOf("@"));
                //String tos = to.substring(to.indexOf("@") + 1, to.indexOf("." , to.indexOf("@")) );

                this.jTextField2.setText(to);
                //this.jTextField4.setText(tos);
                this.jTextField5.setText("회답: " + curMail.subject);
               
            }else if( state.equals("FORWARD") ){
                this.jTextField2.setText("");
                //this.jTextField4.setText("second");
                this.jTextField5.setText("전달: " + curMail.subject);
               
            }
            
            this.jTextField6.setText(curMail.attach1);
            this.jTextArea1.setText(curMail.content + "\n" +  "=================================" + "\n");
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setBackground(java.awt.SystemColor.activeCaption);
        jLabel2.setFont(new java.awt.Font("WKLChongbong", 1, 12));
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("받는 사람");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jTextField1.setEditable(false);

        jLabel3.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel3.setText("보내는 사람");

        jLabel4.setText("@");

        jTextField3.setEditable(false);

        jLabel5.setText(".or.kp");

        jLabel8.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel8.setText("제목");

        jLabel9.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel9.setText("첨부파일");

        jTextField6.setEditable(false);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel10.setText("내용");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jButton2.setText("전송");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("WKLChongbong", 0, 12)); // NOI18N
        jLabel6.setText("(여러 주소들에 보낼때에는 <;>로 구분하여야 합니다.");

        jLabel7.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel7.setText("례: aaa@second.or.kp; bbb@second.or.kp; ccc@second.or.kp)");

        jLabel1.setFont(new java.awt.Font("WKLChongbong", 0, 12)); // NOI18N
        jLabel1.setText("첨부화일용량은 5M보다 작아야 합니다.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel5))
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)))
                    .addComponent(jLabel10)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if( this.jTextField1.getText().trim().equals("") || this.jTextField3.getText().trim().equals("") ||
            this.jTextField2.getText().trim().equals("")  ){
            //JOptionPane.showMessageDialog(null,"사용자정보를 정확히 입력하십시오.","알림",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String from = this.jTextField1.getText().trim();
        String fromserver = this.jTextField3.getText().trim();
        String to = this.jTextField2.getText().replace("@","xyz@").trim();
         //  from.substring(0, this.jTextField2.getText().indexOf("@"));
        //String toserver = this.jTextField4.getText().trim();
        String subject = this.jTextField5.getText().trim();
        String content = this.jTextArea1.getText().trim();
        String attach = this.jTextField6.getText().trim();
        
        StringTokenizer tk = new StringTokenizer( to, ";" );
        while(tk.hasMoreElements()){
            Date sentDate = new Date();
            String to1 = tk.nextToken().trim();
            int flag = sendMail(from, fromserver, to1, subject, content, attach, sentDate);
            //int flag = 0;
            if( flag == 1 ){
                JOptionPane.showMessageDialog(null,"편지전송이 실패하였습니다.","알림",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null,"편지전송이 성공하였습니다.","알림",JOptionPane.INFORMATION_MESSAGE);

                //save mail
                String filename = String.valueOf(sentDate.getYear() + 1900) + "-" +
                        prefixStr(sentDate.getMonth() + 1, 2) + "-" + prefixStr(sentDate.getDate(), 2) + " " +
                        prefixStr(sentDate.getHours(), 2) + "-" + prefixStr(sentDate.getMinutes(),2) + "-" +
                        prefixStr(sentDate.getSeconds(), 2) + " " + to.replace("xyz@", "@") + ".mail";
                try {
                    String ext = "";
                    if( !attach.equals("") )
                         ext = attach.substring(attach.lastIndexOf("."));
                    OutputStream propOut = new FileOutputStream(acc.getPath() + "/" + acc.getId() + "_Mail/outbox/" + filename);
                    Properties props = new Properties();
                    props.setProperty("name", filename);
                    props.setProperty("from", from + "@" + fromserver + ".or.kp");
                    props.setProperty("to", to1.replace("xyz@","@"));
                    props.setProperty("subject", subject);
                    props.setProperty("content", content);
                    props.setProperty("attach1", attach);
                    if( !attach.equals("") )
                        props.setProperty("attach2",
                        String.valueOf(sentDate.getYear() + 1900) + "-" +
                        prefixStr(sentDate.getMonth() + 1, 2) + "-" + prefixStr(sentDate.getDate(), 2) + " " +
                        prefixStr(sentDate.getHours(), 2) + "-" + prefixStr(sentDate.getMinutes(),2) + "-" +
                        prefixStr(sentDate.getSeconds(), 2) + ext);
                    else
                        props.setProperty("attach2", "");
                    props.setProperty("time",
                        String.valueOf(sentDate.getYear() + 1900) + "/" +
                        prefixStr(sentDate.getMonth() + 1, 2) + "/" + prefixStr(sentDate.getDate(), 2) + " " +
                        prefixStr(sentDate.getHours(), 2) + ":" + prefixStr(sentDate.getMinutes(),2) + ":" +
                        prefixStr(sentDate.getSeconds(), 2));

                    props.store(propOut, "SentMail");
                    propOut.close();
                    propOut = null;
                    props = null;


                    File dstFile = new File(acc.getPath() + "/" + acc.getId() + "_Mail/outbox/attach/" +
                            String.valueOf(sentDate.getYear() + 1900) + "-" +
                        prefixStr(sentDate.getMonth() + 1, 2) + "-" + prefixStr(sentDate.getDate(), 2) + " " +
                        prefixStr(sentDate.getHours(), 2) + "-" + prefixStr(sentDate.getMinutes(),2) + "-" +
                        prefixStr(sentDate.getSeconds(), 2) + ext);
                    File srcFile = new File(attachFile.getAbsolutePath());
                    FileInputStream fis = new FileInputStream(srcFile);
                    FileOutputStream fos = new FileOutputStream(dstFile);
                    int byt;
                    while((byt = fis.read()) != -1){
                        fos.write(byt);
                    }

                    fos.close();
                    fis.close();
                    System.gc();

                } catch (Exception e) {
                    System.out.println(e.toString());
                }


            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
    private String convertUTF(String inpStr){
        StringBuffer ret = new StringBuffer("");

        for( int inx = 0 ; inx < inpStr.length() ; inx++ ){            
            int cod = inpStr.codePointAt(inx);
            String codStr = prefixStr1(Integer.toHexString(cod),4).toUpperCase();
            
            ret.append(codStr);
        }
        return ret.toString();
    }
    
    private String prefixStr(int inp, int dec){
        String ret = String.valueOf(inp);
        int len = ret.length();
        if( len < dec ){
            for( int inx = 0 ; inx < dec - len ; inx++ ) {
                ret = "0" + ret;
            }
        }
        return ret;
    }
    private String prefixStr1(String inp, int dec){
        String ret = inp;
        int len = ret.length();
        if( len < dec ){
            for( int inx = 0 ; inx < dec - len ; inx++ ) {
                ret = "0" + ret;
            }
        }
        return ret;
    }
    public int sendMail(String from, String fromserver ,String to, 
            String subject, String content, String attach, Date sd){


        Properties props = new Properties();
        props.put("mail.transport.protocol", "smtp");
        props.put("mail.smtp.host", acc.getHost());
        props.put("mail.debug", "false");
        props.put("mail.smtp.starttls.enable", "true");
         props.put("mail.smtp.auth", "false");
        props.put("mail.smtp.port", "25");
        props.put("mail.smtp.timeout", "10000");
        Session session =  Session.getInstance(props, null);
        session.setDebug(true);
        
        try {
            Message msg =  new MimeMessage(session);
            msg.setFrom(new InternetAddress(from + "xyz@" + fromserver + ".or.kp"));
            InternetAddress[] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(convertUTF(subject));
            //msg.setSubject(subject);
            msg.setHeader("content-type", "charset=utf8");
            msg.setSentDate(sd);

            Multipart multipart = new MimeMultipart();
            BodyPart messageBodyPart = new MimeBodyPart();
            content += ("<attachfiletemp>"  + attach.trim() + "</attachfiletemp>");
            messageBodyPart.setText(convertUTF(content));
            multipart.addBodyPart(messageBodyPart);
            
            if( !attach.trim().equals("") ){               
                messageBodyPart = new MimeBodyPart();
                DataSource source = new FileDataSource(attachFile);
               
                messageBodyPart.setDataHandler(new DataHandler(source));
                 messageBodyPart.setHeader("content-type", "charset=utf8");
                //messageBodyPart.setFileName(attachFile.getName());
                messageBodyPart.setFileName("temp.mail");
                multipart.addBodyPart(messageBodyPart);
            }

            msg.setContent(multipart);
           
            Transport.send(msg);

        } catch (Exception mex) {            
            return 1;
        }
        return 0;

    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        attachFile = null;
         try{
             attachFile = openf();
         }catch(Exception e){
             attachFile = null;
         }
        this.jTextField6.setText(attachFile.getName());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.view.contactString = "";
        ContactDlg contact = new ContactDlg(null, true, this.view, this, true);
        contact.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked
    public void writeContact(String[] inpStr){
        String str = this.jTextField2.getText().trim();
        StringTokenizer st = new StringTokenizer(str, ";");

        Vector vect = new Vector();
        while(st.hasMoreTokens()){
            vect.add(st.nextToken());
        }
        for( int inx = 0 ; inx < inpStr.length ; inx++ ){
            String st1 = inpStr[inx];
            boolean existf = false;
            for( int jnx = 0 ; jnx < vect.size() ; jnx++ ){
                String st2 = (String)vect.get(jnx);
                if( st1.trim().equals(st2.trim())){
                    existf = true;
                    break;
                }
            }
            if( !existf ) vect.add(st1);
        }

        String ret = "";
        for( int inx = 0 ; inx < vect.size() ; inx++ ){
            ret += (String)vect.get(inx);
            if( inx != vect.size() - 1 ) ret += ";";
        }
        
        this.jTextField2.setText(ret);
        

    }
    public File openf(){
        JFileChooser jfc = new JFileChooser();
        int returnVal = jfc.showOpenDialog(this);
        File file = null;
        if (returnVal == JFileChooser.APPROVE_OPTION) {
             file = jfc.getSelectedFile();
             return file;
        } else {
             return null;
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

}
