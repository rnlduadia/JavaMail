/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Account.java
 *
 * Created on 2013. 6. 16, 오전 1:11:18
 */

package managemail;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Administrator
 */
public class AccountDlg extends javax.swing.JDialog {

    private Account account;
    private ManageMailView view;
    private Login login;
    private DefaultTableModel tableModel;
    private int selRow;
    
    /** Creates new form Account */
    public AccountDlg(java.awt.Frame parent, boolean modal, ManageMailView _view, Login _login) {
        super(parent, modal);
        this.view = _view;
        this.login = _login;
        initComponents();
        initWindow();
        initSettings();
    }
    private void initSettings(){

        TableColumn column = jTable1.getColumnModel().getColumn(0);
        column.setPreferredWidth(80);
     
        column = jTable1.getColumnModel().getColumn(1);
        column.setPreferredWidth(200);     

        column = jTable1.getColumnModel().getColumn(2);
        column.setPreferredWidth(80);

        column = jTable1.getColumnModel().getColumn(3);
        column.setPreferredWidth(50);
        
        arrangeTable();
    }
    private void arrangeTable(){
        tableModel = (DefaultTableModel)this.jTable1.getModel();
        while( tableModel.getRowCount() != 0 ) {
            tableModel.removeRow(0);
        }

        for( int inx = 0 ; inx <= view.usersCnt ; inx++ ){
            Account acc = view.users[inx];
            Vector tmp = new Vector();
            tmp.add(acc.getName());
            tmp.add(acc.getPosition());
            tmp.add(acc.getId());
            tmp.add(false);

            tableModel.addRow(tmp);
        }
        selRow = -1;
    }
    private void initWindow(){
        int wndWidth = 435;//425;
        int wndHeight = 400;//300;

        Toolkit tk = getToolkit();
        Dimension screenSize = tk.getScreenSize();
        Dimension windowSize = getSize();

        setBounds((screenSize.width - wndWidth) / 2,
                  (screenSize.height - wndHeight) / 2,
                  wndWidth,
                  wndHeight);

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPasswordField1 = new javax.swing.JPasswordField();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("전자우편 사용자 등록");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel1.setText("사용자이름");

        jLabel2.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel2.setText("직장직위");

        jLabel3.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel3.setText("전자우편주소");

        jLabel5.setText("@");

        jTextField4.setText("second");

        jLabel6.setText(".or.kp");

        jButton1.setFont(new java.awt.Font("WKLChongbong", 0, 12)); // NOI18N
        jButton1.setText("등록");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jButton2.setText("초기화");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel7.setText("우편보관위치");

        jTextField5.setEditable(false);

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("WKLChongbong", 0, 12)); // NOI18N
        jButton4.setText("삭제");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jLabel8.setText("사용자암호");

        jTable1.setFont(new java.awt.Font("WKLChongbong", 0, 12));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "이름", "직장직위", "전자우편주소", "삭제"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPasswordField1.setEchoChar('*');

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton3)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.jTextField1.setText("");
        this.jTextField2.setText("");
        this.jTextField3.setText("");
        this.jTextField4.setText("second");
        this.jTextField5.setText("");
        this.jPasswordField1.setText("");
        this.jTextField3.setEditable(true);
        this.jTextField4.setEditable(true);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public String paddingstr(String inp, int decimal){
        String ret = inp;
        for( int inx = 0 ; inx < decimal - inp.length() ; inx++ ){
            ret = "0" + ret;
        }
        return ret;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String name = this.jTextField1.getText().trim();
        String pos = this.jTextField2.getText().trim();
        String id = this.jTextField3.getText().trim();
        String server = this.jTextField4.getText().trim();
        String path = this.jTextField5.getText().trim();
        String pwd = this.jPasswordField1.getText().trim();
        
        File pa = new File(path);

        if( name.equals("") || pos.equals("") || id.equals("") || server.equals("") || pwd.equals("") ||
            !( pa.exists() && pa.isDirectory()) ){
            JOptionPane.showMessageDialog(null,"사용자정보를 정확히 입력하십시오.","알림",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if( selRow == -1 ){
            //check duplication
            for( int inx = 0 ; inx <= view.usersCnt ; inx++ ){
                if( inx == selRow ) continue;
                String id1 = view.users[inx].getId();
                if( id1.equals(id) ){
                    JOptionPane.showMessageDialog(null,"사용자ID가 중복되였습니다.", "알림",JOptionPane.INFORMATION_MESSAGE);
                    this.jTextField3.setText("");
                    return;
                }
            }
            try {
                Account user = new Account();
                user.setId(id);
                user.setPwd(pwd);
                user.setName(name);
                user.setPosition(pos);
                user.setServer(server);
                user.setPath(path);

                UserInfo ui = new UserInfo();

                Date no = new Date();
                String dateStr = String.valueOf(no.getYear()+1900) + paddingstr(String.valueOf(no.getMonth() + 1), 2) + paddingstr(String.valueOf(no.getDate()), 2) +
                        paddingstr(String.valueOf(no.getHours()), 2) + paddingstr(String.valueOf(no.getMinutes()), 2) + paddingstr(String.valueOf(no.getSeconds()), 2);

                String filename = dateStr + ".usr";
        
                boolean retVal = ui.generate(user, filename);
                if( retVal ){
                    view.usersCnt++;
                    view.users[view.usersCnt] = user;
                }

                File inf = new File(path + "/" + user.getId() + "_Mail"); inf.mkdir();
                inf = new File(path + "/" + user.getId() + "_Mail/inbox"); inf.mkdir();
                inf = new File(path + "/" + user.getId() + "_Mail/outbox"); inf.mkdir();
                inf = new File(path + "/" + user.getId() + "_Mail/inbox/attach"); inf.mkdir();
                inf = new File(path + "/" + user.getId() + "_Mail/outbox/attach"); inf.mkdir();

                System.gc();
            } catch (Exception ex) {
                System.out.println(ex.toString());
            }

            arrangeTable();
        }else{
            
            try {
                Account user = view.users[selRow];
                user.setId(id);
                user.setPwd(pwd);
                user.setName(name);
                user.setPosition(pos);
                user.setServer(server);
                user.setPath(path);
                String filename = user.getFileinfo();
               
                UserInfo ui = new UserInfo();
                boolean retVal = ui.generate(user, filename);
                if( retVal ){                    
                    view.users[selRow] = user;
                }

            } catch (Exception ex) {
                System.out.println(ex.toString());
            }

            arrangeTable();
        }
        
        /*
        try {
            OutputStream propOut = new FileOutputStream(System.getProperty("user.dir") + "/" + "mailAccount.stat");
            Properties props = new Properties();
            props.setProperty("name", name);
            props.setProperty("position", pos);
            props.setProperty("id", id);
            props.setProperty("server", server);
            props.setProperty("path", path);

            props.store(propOut, "mailAccount");
            propOut.close();
            propOut = null;
            props = null;

            File inf = new File(path + "/Mail"); inf.mkdir();
            inf = new File(path + "/Mail/inbox"); inf.mkdir();
            inf = new File(path + "/Mail/outbox"); inf.mkdir();
            inf = new File(path + "/Mail/inbox/attach"); inf.mkdir();
            inf = new File(path + "/Mail/outbox/attach"); inf.mkdir();           

            System.gc();

        } catch (Exception e) {
            System.out.println(e.toString());
        }
        this.view.curUser.setId(id);
        this.view.curUser.setName(name);
        this.view.curUser.setPosition(pos);
        this.view.curUser.setServer(server);
        this.view.curUser.setPath(path);

        this.setVisible(false);
         * */
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String fn = "";
        try{
             fn = openf();
         }catch(Exception e){
             fn = "";
         }
        this.jTextField5.setText(fn);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  /* 
*/
   int delCnt=0;
   int totalCnt =  tableModel.getRowCount();
   for( int inx = tableModel.getRowCount() -1  ; inx > -1 ; inx-- ){
            Object fl = tableModel.getValueAt(inx, 3);
            if( fl == null ) continue;
            String ff = fl.toString();
            if( ff.equals("true")){
                int selInx = inx;
                String fi = view.users[selInx].getFileinfo();                
                File m = new File(System.getProperty("user.dir") + "/" + fi);
                if( m.exists() ) m.delete();

                view.usersCnt--;
                view.users[selInx] = new Account();
                
                tableModel.removeRow(inx);
                
            }
            else{
               delCnt++;
            }
        }
   if( delCnt==totalCnt ){
            JOptionPane.showMessageDialog(null,"삭제할 전자우편 사용자를 선택하십시오.","알림",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        JTable jt = (JTable)evt.getSource();
        int selInx = jt.getSelectedRow();
        Account acc = view.users[selInx];
        this.jTextField1.setText(acc.getName());
        this.jTextField2.setText(acc.getPosition());
        this.jTextField3.setText(acc.getId());
        this.jTextField4.setText(acc.getServer());
        this.jPasswordField1.setText(acc.getPwd());
        this.jTextField5.setText(acc.getPath());

        this.jTextField3.setEditable(false);
        this.jTextField4.setEditable(false);
        selRow = selInx;
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        login.arrangeUsers();
        this.setVisible(false);

    }//GEN-LAST:event_formWindowClosed

    public String openf(){
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = jfc.showOpenDialog(this);
        
        File file = null;
        if (returnVal == JFileChooser.APPROVE_OPTION) {
             file = jfc.getSelectedFile();
             return file.getAbsolutePath();
        } else {
             return "";
        }

    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AccountDlg dialog = new AccountDlg(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

}
